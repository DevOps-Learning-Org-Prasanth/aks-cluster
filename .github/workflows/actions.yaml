name: Terraform apply
on: 
  workflow_dispatch:
    inputs:
      Option: 
        description: "apply or destroy"
        default: 'apply'
        required: true
jobs:
  terraform-apply:
    name: Terraform Apply_Destroy
    runs-on: ubuntu-latest
    env:
      WORKSPACE: ${{ github.event.inputs.instance }}
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_SUBSCRIPTION_ID: 5efa86ae-29bc-4760-a1db-51bde40f2fad
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform-version: 0.14.2
      
      - uses: azure/login@v1
        with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Configure working directory
        id: wd
        run: |
          echo "::set-output name=directory::./$WORKSPACE"

      - name: Terraform init
        id: init
        working-directory: ./${{ steps.wd.outputs.directory }}
        run: |
          echo "$ARM_SUBSCRIPTION_ID"
          terraform init -input=false

      - name: Terraform plan 
        if: ${{ github.events.inputs.Operation  == 'apply' }}
        id: plan
        working-directory: ./${{ steps.wd.outputs.directory }}
        run: |
          terraform plan -out plan.out -input=false
          
      - name: Terraform apply 
        if: ${{ github.events.inputs.Operation == 'apply' }}
        id: apply
        working-directory: ./${{ steps.wd.outputs.directory }}
        run: |
          terraform apply -input=false -auto-approve plan.out
      - name: Terraform destroy 
        if: ${{ github.events.inputs.Operation == 'destroy' }}
        id: destroy
        working-directory: ./$WORKSPACE 
        run: |
          terraform destroy -input=false -auto-approve
